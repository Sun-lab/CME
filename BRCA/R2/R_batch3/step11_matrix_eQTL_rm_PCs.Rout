
R version 3.3.3 (2017-03-06) -- "Another Canoe"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # ------------------------------------------------------------------------
> # read in more detailed methyaltion information
> # ------------------------------------------------------------------------
> 
> setwd("~/research/TCGA/_Sun_MethyE/shared_data/450k")
> 
> infMd = read.table("HumanMethylation450_15017482_v1-2_filtered_updated.txt",
+ sep="\t", header=TRUE, as.is=TRUE, quote="")
> 
> dim(infMd)
[1] 393401     22
> infMd[1:2,]
        Name Infinium_Design_Type Next_Base Color_Channel Genome_Build CHR
1 cg00035864                   II                                   37   Y
2 cg00050873                    I         A           Red           37   Y
  MAPINFO Strand Random_Loci Methyl27_Loci UCSC_RefGene_Name
1 8553009      F          NA            NA            TTTY18
2 9363356      R          NA            NA    TSPY4;FAM197Y2
  UCSC_RefGene_Accession UCSC_RefGene_Group UCSC_CpG_Islands_Name
1              NR_001550            TSS1500                      
2 NM_001164471;NR_001553       Body;TSS1500  chrY:9363680-9363943
  Relation_to_UCSC_CpG_Island Phantom DMR Enhancer        HMM_Island
1                                               NA                  
2                     N_Shore                   NA Y:9973136-9976273
  Regulatory_Feature_Name Regulatory_Feature_Group DHS
1                                                   NA
2                                                   NA
> 
> # ------------------------------------------------------------
> # read in tumor purity data
> # ------------------------------------------------------------
> 
> setwd("~/research/TCGA/_Sun_MethyE/BRCA/_data2")
> 
> ff0 = "patient_brca_female_Caucasian_EMC_info_absolute.txt"
> emInfo = read.table(ff0, sep = "\t", header = TRUE, as.is=TRUE)
> dim(emInfo)
[1] 405  24
> emInfo[1,]
  bcr_patient_barcode patient_id tissue_source_site birth_days_to
1        TCGA-A1-A0SE       A0SE                 A1        -20717
  last_contact_days_to    death_days_to vital_status
1                 1321 [Not Applicable]        Alive
  ajcc_pathologic_tumor_stage tumor_status age_at_diagnosis
1                     Stage I   TUMOR FREE               56
           methylation_barcode
1 TCGA-A1-A0SE-01A-11D-A10P-05
                                                               methylation_file
1 jhu-usc.edu_BRCA.HumanMethylation450.4.lvl-3.TCGA-A1-A0SE-01A-11D-A10P-05.txt
            expression_barcode
1 TCGA-A1-A0SE-01A-11R-A084-07
                                                          expression_file
1 unc.edu.a998e0ce-9248-460f-aabc-2dad452a1ff9.1153763.rsem.genes.results
                    cn_barcode
1 TCGA-A1-A0SE-01A-11D-A087-01
                                                              cn_file abs_call
1 SHAWM_p_TCGAb72_SNP_N_GenomeWideSNP_6_D12_698000.nocnv_hg19.seg.txt   called
  abs_purity abs_ploidy abs_doublings pam50    noHM_PC1     noHM_PC2
1        0.3       4.07             1  LumA 0.008748328 -0.008863467
     noHM_PC3
1 -0.05572216
> 
> table(is.na(emInfo$abs_purity))

FALSE 
  405 
> 
> # ------------------------------------------------------------------------------
> # Read in eQTL results after removing copy number effects.
> # ------------------------------------------------------------------------------
> 
> pvsCN = read.table("expression_vs_methylation_rm_cn_pam50_qnorm.txt",
+                    header = TRUE, sep = "\t", as.is = TRUE)
> dim(pvsCN)
[1] 1155159       6
> pvsCN[1:2, ]
         SNP     gene       beta    t.stat       p.value           FDR
1 cg12212198 CD3E|916  0.9023866  40.66049 7.981934e-137 4.810407e-127
2 cg14531564  CD5|921 -0.9335314 -40.46326 3.370242e-136 1.015558e-126
> 
> summary(pvsCN$p.value)
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.000e+00 0.000e+00 0.000e+00 3.951e-42 9.096e-44 1.000e-40 
> 
> table(pvsCN$SNP  %in% infMd$Name)

 FALSE   TRUE 
165364 989795 
> pvsCN = pvsCN[which(pvsCN$SNP  %in% infMd$Name),]
> dim(pvsCN)
[1] 989795      6
> pvsCN[1:2, ]
         SNP     gene       beta    t.stat       p.value           FDR
1 cg12212198 CD3E|916  0.9023866  40.66049 7.981934e-137 4.810407e-127
2 cg14531564  CD5|921 -0.9335314 -40.46326 3.370242e-136 1.015558e-126
> summary(pvsCN$p.value)
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.000e+00 0.000e+00 0.000e+00 3.933e-42 8.920e-44 1.000e-40 
> 
> table(pvsCN$p.value < 1e-50)

 FALSE   TRUE 
604242 385553 
> table(pvsCN$p.value < 1e-60)

 FALSE   TRUE 
843550 146245 
> table(pvsCN$p.value < 1e-65)

 FALSE   TRUE 
901107  88688 
> table(pvsCN$p.value < 1e-70)

 FALSE   TRUE 
936777  53018 
> 
> # Want to keep ~100-200k (methylation probe, gene expression) pairs.
> pvs2kp = pvsCN[pvsCN$p.value < 1e-60, ]
> dim(pvs2kp)
[1] 146245      6
> 
> # ------------------------------------------------------------------------------
> # Read in gene expression data and methylation information.
> # ------------------------------------------------------------------------------
> 
> infoE = read.table("expression_info.txt",
+                    sep = "\t", header = TRUE, as.is = TRUE)
> dim(infoE)
[1] 15816     8
> infoE[1:2, ]
     gene geneSymbol geneID   chr    start      end strand ensembl
1 ?|10357          ?  10357 chr20 56063450 56064083      -    <NA>
2 ?|10431          ?  10431 chr10 51592090 51623336      -    <NA>
> 
> table(infoE$chr, useNA = "ifany")

 chr1 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19  chr2 chr20 
 1651   617   902   839   264   501   500   701   945   228  1135  1030   423 
chr21 chr22  chr3  chr4  chr5  chr6  chr7  chr8  chr9  chrX  chrY 
  161   395   888   586   742   817   764   534   635   557     1 
> 
> infoM = read.table("methylation_info.txt",
+                    sep = "\t", header = TRUE, as.is = TRUE)
> dim(infoM)
[1] 394309      4
> infoM[1:2, ]
  Composite.Element.REF Gene_Symbol Chromosome Genomic_Coordinate
1            cg13869341      WASH5P          1              15865
2            cg14008030      WASH5P          1              18827
> table(infoM$Chromosome, useNA = "ifany")

    1    10    11    12    13    14    15    16    17    18    19     2    20 
38242 19826 23592 19786  9777 12319 12483 18028 23465  5021 21102 28054  8658 
   21    22     3     4     5     6     7     8     9     X     Y  <NA> 
 3539  7037 20107 15950 19619 29143 24109 16547  8047  9760    33    65 
> 
> infoE$chr = gsub("chr", "", infoE$chr)
> dim(infoE)
[1] 15816     8
> infoE[1:2, ]
     gene geneSymbol geneID chr    start      end strand ensembl
1 ?|10357          ?  10357  20 56063450 56064083      -    <NA>
2 ?|10431          ?  10431  10 51592090 51623336      -    <NA>
> table(infoE$chr, useNA = "ifany")

   1   10   11   12   13   14   15   16   17   18   19    2   20   21   22    3 
1651  617  902  839  264  501  500  701  945  228 1135 1030  423  161  395  888 
   4    5    6    7    8    9    X    Y 
 586  742  817  764  534  635  557    1 
> 
> # ------------------------------------------------------------------------------
> # Select pairs of (expression, methylation) so that for each pair
> # expression and methylation are from different chromosomes.
> # ------------------------------------------------------------------------------
> 
> iM = infoM[match(pvs2kp$SNP,  infoM$Composite.Element.REF),]
> iE = infoE[match(pvs2kp$gene, infoE$gene),]
> 
> dim(iM)
[1] 146245      4
> dim(iE)
[1] 146245      8
> 
> iM[1:5, ]
         Composite.Element.REF Gene_Symbol Chromosome Genomic_Coordinate
272367              cg12212198                     13          114302021
663                 cg14531564        SDF4          1            1154853
180074              cg11893955                      8           28918821
272367.1            cg12212198                     13          114302021
272367.2            cg12212198                     13          114302021
> iE[1:5, ]
           gene geneSymbol geneID chr     start       end strand
2659   CD3E|916       CD3E    916  11 118175295 118186889      +
2673    CD5|921        CD5    921  11  60869930  60895321      +
2659.1 CD3E|916       CD3E    916  11 118175295 118186889      +
2644    CD2|914        CD2    914   1 117297086 117311850      +
2673.1  CD5|921        CD5    921  11  60869930  60895321      +
               ensembl
2659   ENSG00000198851
2673   ENSG00000110448
2659.1 ENSG00000198851
2644   ENSG00000116824
2673.1 ENSG00000110448
> 
> table(iM$Chromosome == iE$chr, useNA = "ifany")

 FALSE   TRUE 
137149   9096 
> 
> pvs2kp = pvs2kp[which(iM$Chromosome != iE$chr),]
> dim(pvs2kp)
[1] 137149      6
> pvs2kp[1:5, ]
         SNP     gene       beta    t.stat       p.value           FDR
1 cg12212198 CD3E|916  0.9023866  40.66049 7.981934e-137 4.810407e-127
2 cg14531564  CD5|921 -0.9335314 -40.46326 3.370242e-136 1.015558e-126
3 cg11893955 CD3E|916 -0.9044405 -39.74708 6.540046e-134 1.313812e-124
4 cg12212198  CD2|914  0.9188074  39.69249 9.796451e-134 1.475987e-124
7 cg12212198  CD5|921  0.8970633  38.71328 1.459884e-130 1.256880e-121
> 
> length(unique(pvs2kp$gene))
[1] 335
> length(unique(pvs2kp$SNP))
[1] 2966
> 
> sort(table(pvs2kp$gene), decreasing = TRUE)[1:50]

     IL2RG|3561        ITK|3702     SASH3|54440        CD3E|916     IKZF1|10320 
           2010            1947            1887            1817            1811 
  ARHGAP25|9938         CD5|921   ZNF831|128611     SH2D1A|4068         CD2|914 
           1714            1693            1680            1669            1665 
     SLA2|84174      CD96|10225      SIT1|27240        CD3D|915       CCR5|1234 
           1628            1627            1618            1582            1579 
       CD3G|917     TMC8|147138 TBC1D10C|374403      CXCR3|2833        LCK|3932 
           1552            1530            1521            1519            1504 
     ACAP1|9744      EVI2B|2124        CD27|939   UBASH3A|53347    TIGIT|201633 
           1460            1377            1347            1345            1344 
     S1PR4|8698       GZMA|3001     TBX21|30009     BTLA|151888     CXCR6|10663 
           1330            1320            1307            1287            1281 
    SIRPG|55423      ZAP70|7535        CD37|951   ARHGAP9|64333     KLHL6|89857 
           1280            1274            1262            1257            1220 
   PTPRCAP|5790         CD6|923        CD53|963   KIAA0748|9840 C16orf54|283897 
           1205            1195            1187            1186            1175 
   SCML4|256380     TRAT1|50852       PLEK|5341     CCR2|729230       PRF1|5551 
           1173            1164            1140            1138            1109 
  AMICA1|120425    SAMD3|154075    GVIN1|387751    IL12RB1|3594       JAK3|3718 
           1084            1079            1066            1060            1055 
> sort(table(pvs2kp$SNP),  decreasing = TRUE)[1:50]

cg11893955 cg23925513 cg07641284 cg19759064 cg09762242 cg25982880 cg08370546 
       210        204        198        194        193        193        192 
cg00776080 cg00610310 cg11180921 cg02053964 cg02317313 cg06068897 cg12212198 
       191        189        188        187        187        186        186 
cg00109764 cg04330884 cg14311559 cg13415831 cg26922780 cg06787669 cg17603988 
       184        184        184        183        180        179        179 
cg03776194 cg04441857 cg25936358 cg10616795 cg10673833 cg15736127 cg20792833 
       177        177        176        175        173        173        173 
cg12603560 cg18581405 cg21249754 cg23387569 cg03427058 cg10542975 cg03399609 
       172        172        172        172        171        171        170 
cg12487088 cg03699843 cg04334651 cg05059480 cg02358862 cg03032552 cg03297901 
       170        169        169        169        168        168        168 
cg03140421 cg09302355 cg14145194 cg15197065 cg24043628 cg26842815 cg19202014 
       167        167        167        167        167        167        166 
cg25922751 
       166 
> 
> # ------------------------------------------------------------------------------
> # Read in gene expression data and methylation data.
> # ------------------------------------------------------------------------------
> 
> datE = read.table(file = "expression_log_TReC_qnorm.txt", sep = "\t",
+                   header = TRUE, as.is = TRUE)
> dim(datE)
[1] 15816   406
> datE[1:2, 1:5]
       id      A0SE      A0SF       A0SG        A0SH
1 ?|10357 1.1355197 0.9641407 -1.0144987 -0.50186349
2 ?|10431 0.3661064 0.8001130  0.3398226  0.08654337
> 
> datM = read.table(file = "methylation_mvalue_qnorm.txt", sep = "\t",
+                   header = TRUE, as.is = TRUE)
> dim(datM)
[1] 394309    406
> datM[1:2, 1:5]
          id      A0SE      A0SF      A0SG      A0SH
1 cg13869341 -0.262283  0.843382 -0.515919  0.453420
2 cg14008030 -0.211481 -0.750088 -1.262150 -0.733827
> 
> table(names(datE) == names(datM))

TRUE 
 406 
> 
> # datM is too big to do analysis below; restrict to only the relevant probes.
> probes_to_keep = unique(pvsCN$SNP)
> 
> dim(pvsCN)
[1] 989795      6
> length(probes_to_keep)
[1] 10151
> 
> dim(datM)
[1] 394309    406
> datM = datM[which(datM$id %in% probes_to_keep), ]
> dim(datM)
[1] 10151   406
> 
> # ------------------------------------------------------------------------------
> # Take residuals.
> # ------------------------------------------------------------------------------
> 
> pDatE = data.matrix(datE[, -1])
> pDatM = data.matrix(datM[, -1])
> 
> cDat = read.table(file="cov_EM_with_pam50.txt", sep = "\t",
+                   header = TRUE, as.is = TRUE)
> 
> dim(cDat)
[1]  42 406
> cDat[1:5, 1:5]
  id A0SE A0SF A0SG A0SH
1 A2    0    0    0    0
2 A7    0    0    0    0
3 A8    0    0    0    0
4 AC    0    0    0    0
5 AN    0    0    0    0
> cDat$id
 [1] "A2"       "A7"       "A8"       "AC"       "AN"       "AO"      
 [7] "AQ"       "AR"       "B6"       "BH"       "D8"       "E2"      
[13] "E9"       "EW"       "GM"       "A084"     "A109"     "A10J"    
[19] "A12P"     "A137"     "A13Q"     "A144"     "A14D"     "A14M"    
[25] "A157"     "A169"     "A16F"     "A17B"     "A180"     "A18M"    
[31] "A19W"     "A213"     "A21T"     "A22K"     "age"      "noHM_PC1"
[37] "noHM_PC2" "noHM_PC3" "Her2"     "LumA"     "LumB"     "Normal"  
> 
> X = data.matrix(t(cDat[, -1]))
> dim(X)
[1] 405  42
> X[1:5, 1:5]
     [,1] [,2] [,3] [,4] [,5]
A0SE    0    0    0    0    0
A0SF    0    0    0    0    0
A0SG    0    0    0    0    0
A0SH    0    0    0    0    0
A0SI    0    0    0    0    0
> 
> X = cbind(rep(1, nrow(X)), X)
> dim(X)
[1] 405  43
> X[1:5, 1:5]
     [,1] [,2] [,3] [,4] [,5]
A0SE    1    0    0    0    0
A0SF    1    0    0    0    0
A0SG    1    0    0    0    0
A0SH    1    0    0    0    0
A0SI    1    0    0    0    0
> 
> H = X %*% solve(t(X) %*% X) %*% t(X)
> 
> date()
[1] "Thu Jul 27 23:10:40 2017"
> rDatE = pDatE %*% (diag(nrow(H)) - H)
> date()
[1] "Thu Jul 27 23:10:41 2017"
> dim(rDatE)
[1] 15816   405
> 
> rDatM = pDatM %*% (diag(nrow(H)) - H)
> date()
[1] "Thu Jul 27 23:10:45 2017"
> dim(rDatM)
[1] 10151   405
> 
> # ------------------------------------------------------------------------------
> # Prepare data of expression and methylation.
> # ------------------------------------------------------------------------------
> 
> rDatE = scale(t(rDatE))
> rDatM = scale(t(rDatM))
> 
> dim(rDatE)
[1]   405 15816
> dim(rDatM)
[1]   405 10151
> 
> summary(apply(rDatE, 2, mean))
      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. 
-4.175e-17 -1.255e-17  8.285e-20  1.025e-19  1.276e-17  4.541e-17 
> summary(apply(rDatE, 2, sd))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      1       1       1       1       1       1 
> 
> summary(apply(rDatM, 2, mean, na.rm = TRUE))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
      0       0       0       0       0       0     132 
> summary(apply(rDatM, 2, sd,   na.rm = TRUE))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's 
      1       1       1       1       1       1     132 
> 
> rDatE1 = t(rDatE[, match(pvs2kp$gene, datE$id)])
> rDatM1 = t(rDatM[, match(pvs2kp$SNP,  datM$id)])
> 
> dim(rDatE1)
[1] 137149    405
> dim(rDatM1)
[1] 137149    405
> 
> rDatE1[1:5, 1:5]
            A0SE     A0SF       A0SG       A0SH      A0SI
[1,]  0.07885250 1.542886 -0.2057691 -1.3224683 0.6547300
[2,] -0.26124915 1.084934 -0.3679171 -0.9884395 0.6848997
[3,]  0.07885250 1.542886 -0.2057691 -1.3224683 0.6547300
[4,] -0.06410439 1.386053 -0.3903773 -1.0635900 0.7571312
[5,] -0.26124915 1.084934 -0.3679171 -0.9884395 0.6848997
> rDatM1[1:5, 1:5]
             A0SE       A0SF       A0SG       A0SH       A0SI
272367 0.01188297  0.8973989  0.2267658 -0.8932373  0.5165570
663    0.56547408 -1.1596462  0.1126649  0.8961145 -0.1066781
180074 0.57732849 -1.3093007 -0.4503494  0.7602570 -0.4448090
272367 0.01188297  0.8973989  0.2267658 -0.8932373  0.5165570
272367 0.01188297  0.8973989  0.2267658 -0.8932373  0.5165570
> 
> # ------------------------------------------------------------------------------
> # Plot the first 100 pairs and bottom.
> # ------------------------------------------------------------------------------
> 
> pdf("../figures2/EM_1e-60_rm_cn_pcs_resid_ex_top100_qnorm.pdf",
+     width = 5, height = 5)
> par(mar = c(5,4,1,1), bty = "n")
> 
> # Some rows (probes) are problematic (all NA values). Skip such probes when
> # printing out the top 100.
> j = 0
> for (i in 1:100) {
+   check_next_row = TRUE
+   while (check_next_row & j < min(nrow(rDatE1), nrow(rDatM1))) {
+     j = j + 1
+     ei = rDatE1[j, ]
+     mi = rDatM1[j, ]
+     if (length(which(is.na(ei))) == 0 &
+         length(which(is.na(mi))) == 0) {
+       check_next_row = FALSE
+     } else {
+       print(paste("Skipping row ", as.character(j), ": Num NA in ei: ",
+                   as.character(length(which(is.na(ei)))), ", Num NA in mi: ",
+                   as.character(length(which(is.na(mi)))), sep = ""))
+     }
+   }
+   
+   plot(mi, ei, xlab = pvs2kp$SNP[j], ylab = pvs2kp$gene[j])
+ }
> 
> dev.off()
null device 
          1 
> 
> 
> pdf("../figures2/EM_1e-60_rm_cn_pcs_resid_ex_bottom100_qnorm.pdf",
+     width = 5, height = 5)
> par(mar = c(5, 4, 1, 1), bty = "n")
> 
> j = nrow(rDatE1) + 1
> for (i in 1:100) {
+   check_next_row = TRUE
+   while (check_next_row & j > 0) {
+     j = j - 1
+     ei = rDatE1[j, ]
+     mi = rDatM1[j, ]
+     if (length(which(is.na(ei))) == 0 &
+         length(which(is.na(mi))) == 0) {
+       check_next_row = FALSE
+     } else {
+       print(paste("Skipping row ", as.character(j), ": Num NA in ei: ",
+                   as.character(length(which(is.na(ei)))), ", Num NA in mi: ",
+                   as.character(length(which(is.na(mi)))), sep = ""))
+     }
+   }
+   
+   plot(mi, ei, xlab = pvs2kp$SNP[j], ylab = pvs2kp$gene[j])
+ }
[1] "Skipping row 137065: Num NA in ei: 0, Num NA in mi: 405"
> 
> dev.off()
null device 
          1 
> 
> # ------------------------------------------------------------------------------
> # Calculate PCs of each Pair.
> # ------------------------------------------------------------------------------
> 
> signs = rep(1, nrow(pvs2kp))
> signs[which(pvs2kp$beta < 0)] = -1
> table(signs)
signs
   -1     1 
50579 86570 
> 
> rDatM1[1:9, 1:5]
              A0SE       A0SF       A0SG       A0SH       A0SI
272367  0.01188297  0.8973989  0.2267658 -0.8932373  0.5165570
663     0.56547408 -1.1596462  0.1126649  0.8961145 -0.1066781
180074  0.57732849 -1.3093007 -0.4503494  0.7602570 -0.4448090
272367  0.01188297  0.8973989  0.2267658 -0.8932373  0.5165570
272367  0.01188297  0.8973989  0.2267658 -0.8932373  0.5165570
272367  0.01188297  0.8973989  0.2267658 -0.8932373  0.5165570
180074  0.57732849 -1.3093007 -0.4503494  0.7602570 -0.4448090
663     0.56547408 -1.1596462  0.1126649  0.8961145 -0.1066781
6302   -0.21414129  0.7377344  0.5213981 -0.9873898  0.5237287
> signs[1:9]
[1]  1 -1 -1  1  1  1 -1 -1  1
> rDatM1 = rDatM1*signs
> rDatM1[1:9, 1:5]
              A0SE      A0SF       A0SG       A0SH      A0SI
272367  0.01188297 0.8973989  0.2267658 -0.8932373 0.5165570
663    -0.56547408 1.1596462 -0.1126649 -0.8961145 0.1066781
180074 -0.57732849 1.3093007  0.4503494 -0.7602570 0.4448090
272367  0.01188297 0.8973989  0.2267658 -0.8932373 0.5165570
272367  0.01188297 0.8973989  0.2267658 -0.8932373 0.5165570
272367  0.01188297 0.8973989  0.2267658 -0.8932373 0.5165570
180074 -0.57732849 1.3093007  0.4503494 -0.7602570 0.4448090
663    -0.56547408 1.1596462 -0.1126649 -0.8961145 0.1066781
6302   -0.21414129 0.7377344  0.5213981 -0.9873898 0.5237287
> 
> PCs = rDatE1 + rDatM1
> PCs = PCs * sqrt(2) / 2
> 
> nna = rowSums(is.na(PCs))
> table(nna)
nna
     0    405 
136163    986 
> 
> PCs = PCs[which(nna == 0), ]
> dim(PCs)
[1] 136163    405
> 
> covdatR1 = t(PCs) %*% PCs / nrow(PCs)
> dim(covdatR1)
[1] 405 405
> prdatR1  = eigen(covdatR1)
> 
> prdatR1$values[1:20]
 [1] 631.2698830  14.0795056   5.0761226   3.0267928   2.5367515   2.1036932
 [7]   1.6386690   1.5284021   1.4507220   1.1288257   1.0393484   0.9942742
[13]   0.9065295   0.8532225   0.8477510   0.7561164   0.7297795   0.6628674
[19]   0.6188680   0.6100904
> prdatR1$values[1:20]/sum(prdatR1$values)
 [1] 0.8845529704 0.0197285960 0.0071128046 0.0042412265 0.0035545670
 [6] 0.0029477536 0.0022961488 0.0021416397 0.0020327922 0.0015817420
[11] 0.0014563640 0.0013932048 0.0012702544 0.0011955591 0.0011878924
[16] 0.0010594914 0.0010225874 0.0009288283 0.0008671752 0.0008548757
> cumsum(prdatR1$values)[1:20]/sum(prdatR1$values)
 [1] 0.8845530 0.9042816 0.9113944 0.9156356 0.9191902 0.9221379 0.9244341
 [8] 0.9265757 0.9286085 0.9301902 0.9316466 0.9330398 0.9343101 0.9355056
[15] 0.9366935 0.9377530 0.9387756 0.9397044 0.9405716 0.9414265
> 
> # ------------------------------------------------------------------------------
> # Make the plot.
> # ------------------------------------------------------------------------------
> 
> pdf("../figures2/ECM_pcs_qnorm.pdf",
+    width = 4, height = 4)
> par(mfrow = c(1, 1), mar = c(5, 4, 3, 1), bty = "n")
> barplot(prdatR1$values[1:10], names.arg = 1:10)
> dev.off()
null device 
          1 
> 
> pcs = prdatR1$vectors[, 1:50]
> colnames(pcs) = paste("PC", 1:50, sep = "")
> 
> write.table(pcs, file = "ECM_pcs50_eigen_vectors_qnorm.txt",
+             append = FALSE, quote = FALSE, sep = "\t",
+             row.names = FALSE, col.names = TRUE)
> 
> # ------------------------------------------------------------------------
> # make the plot again
> # ------------------------------------------------------------------------
> 
> pdf("../figures2/purity_ECM_pam50_vs_purity_ABSOLUTE1_qnorm.pdf",
+ width=6, height=6)
> par(mfrow=c(2,2), mar=c(5,4,3,1), bty="n", cex=0.9, cex.main=1, font.main=1)
> barplot(prdatR1$values[1:10], names.arg=1:10, xlab="index of PCs",
+ ylab="Eigen-value")
> for(j in 1:3){
+   ct1 = cor.test(prdatR1$vectors[,j], emInfo$abs_purity)
+   mm  = sprintf("corr=%.2f, p-value=%.1e", ct1$estimate, ct1$p.value)
+   plot(prdatR1$vectors[,j], emInfo$abs_purity,
+   xlab=sprintf("E-M PC %d", j),
+   ylab="purity by ABSOLUTE", main=mm, cex=0.8)
+ }
> dev.off()
null device 
          1 
> 
> 
> pdf("../figures2/purity_ECM_pam50_vs_purity_ABSOLUTE2_qnorm.pdf",
+ width=6, height=6)
> par(mfrow=c(2,2), mar=c(5,4,3,1), bty="n", cex=0.9, cex.main=1, font.main=1)
> for(j in 4:7){
+   ct1 = cor.test(prdatR1$vectors[,j], emInfo$abs_purity)
+   mm  = sprintf("corr=%.2f, p-value=%.1e", ct1$estimate, ct1$p.value)
+   plot(prdatR1$vectors[,j], emInfo$abs_purity,
+   xlab=sprintf("E-M PC %d", j),
+   ylab="purity by ABSOLUTE", main=mm, cex=0.8)
+ }
> dev.off()
null device 
          1 
> 
> # ------------------------------------------------------------------------------
> # Output new covariate data with one PC.
> # ------------------------------------------------------------------------------
> 
> cDat = read.table(file="cov_EM_with_pam50.txt", sep = "\t",
+                   header = TRUE, as.is = TRUE)
> 
> dim(cDat)
[1]  42 406
> cDat[1:5, 1:5]
  id A0SE A0SF A0SG A0SH
1 A2    0    0    0    0
2 A7    0    0    0    0
3 A8    0    0    0    0
4 AC    0    0    0    0
5 AN    0    0    0    0
> cDat$id
 [1] "A2"       "A7"       "A8"       "AC"       "AN"       "AO"      
 [7] "AQ"       "AR"       "B6"       "BH"       "D8"       "E2"      
[13] "E9"       "EW"       "GM"       "A084"     "A109"     "A10J"    
[19] "A12P"     "A137"     "A13Q"     "A144"     "A14D"     "A14M"    
[25] "A157"     "A169"     "A16F"     "A17B"     "A180"     "A18M"    
[31] "A19W"     "A213"     "A21T"     "A22K"     "age"      "noHM_PC1"
[37] "noHM_PC2" "noHM_PC3" "Her2"     "LumA"     "LumB"     "Normal"  
> 
> pt1 = data.frame(id = "pcs_ECM_PC1", t(pcs[, 1]))
> names(pt1) = names(cDat)
> dim(pt1)
[1]   1 406
> 
> cDat1 = rbind(cDat, pt1)
> dim(cDat1)
[1]  43 406
> cDat1[(nrow(cDat1) - 2):nrow(cDat1), 1:5]
            id      A0SE      A0SF        A0SG       A0SH
41        LumB 0.0000000  0.000000  0.00000000 0.00000000
42      Normal 0.0000000  0.000000  0.00000000 0.00000000
43 pcs_ECM_PC1 0.0152506 -0.055427 -0.01438745 0.04001568
> cDat1$id
 [1] "A2"          "A7"          "A8"          "AC"          "AN"         
 [6] "AO"          "AQ"          "AR"          "B6"          "BH"         
[11] "D8"          "E2"          "E9"          "EW"          "GM"         
[16] "A084"        "A109"        "A10J"        "A12P"        "A137"       
[21] "A13Q"        "A144"        "A14D"        "A14M"        "A157"       
[26] "A169"        "A16F"        "A17B"        "A180"        "A18M"       
[31] "A19W"        "A213"        "A21T"        "A22K"        "age"        
[36] "noHM_PC1"    "noHM_PC2"    "noHM_PC3"    "Her2"        "LumA"       
[41] "LumB"        "Normal"      "pcs_ECM_PC1"
> 
> write.table(cDat1, file = "cov_EM_with_PCs1_qnorm.txt",
+             append = FALSE, quote = FALSE, sep = "\t",
+             row.names = FALSE, col.names = TRUE)
> 
> # ------------------------------------------------------------------------------
> # Output new covariate data with two PCs.
> # ------------------------------------------------------------------------------
> 
> pt1 = data.frame(id = "pcs_ECM_PC2", t(pcs[, 2]))
> names(pt1) = names(cDat)
> dim(pt1)
[1]   1 406
> 
> cDat2 = rbind(cDat1, pt1)
> dim(cDat2)
[1]  44 406
> cDat2[(nrow(cDat2) - 2):nrow(cDat2), 1:5]
            id       A0SE        A0SF        A0SG        A0SH
42      Normal 0.00000000  0.00000000  0.00000000  0.00000000
43 pcs_ECM_PC1 0.01525060 -0.05542700 -0.01438745  0.04001568
44 pcs_ECM_PC2 0.04186773  0.05970565 -0.02456558 -0.13746509
> cDat2$id
 [1] "A2"          "A7"          "A8"          "AC"          "AN"         
 [6] "AO"          "AQ"          "AR"          "B6"          "BH"         
[11] "D8"          "E2"          "E9"          "EW"          "GM"         
[16] "A084"        "A109"        "A10J"        "A12P"        "A137"       
[21] "A13Q"        "A144"        "A14D"        "A14M"        "A157"       
[26] "A169"        "A16F"        "A17B"        "A180"        "A18M"       
[31] "A19W"        "A213"        "A21T"        "A22K"        "age"        
[36] "noHM_PC1"    "noHM_PC2"    "noHM_PC3"    "Her2"        "LumA"       
[41] "LumB"        "Normal"      "pcs_ECM_PC1" "pcs_ECM_PC2"
> 
> write.table(cDat2, file = "cov_EM_with_PCs2_qnorm.txt",
+             append = FALSE, quote = FALSE, sep = "\t",
+             row.names = FALSE, col.names = TRUE)
> 
> # ------------------------------------------------------------------------------
> # Output new covariate data with three PCs.
> # ------------------------------------------------------------------------------
> 
> pt1 = data.frame(id = "pcs_ECM_PC3", t(pcs[, 3]))
> names(pt1) = names(cDat)
> dim(pt1)
[1]   1 406
> 
> cDat3 = rbind(cDat2, pt1)
> dim(cDat3)
[1]  45 406
> cDat3[(nrow(cDat3) - 2):nrow(cDat3), 1:5]
            id        A0SE        A0SF        A0SG        A0SH
43 pcs_ECM_PC1 0.015250597 -0.05542700 -0.01438745  0.04001568
44 pcs_ECM_PC2 0.041867727  0.05970565 -0.02456558 -0.13746509
45 pcs_ECM_PC3 0.009740087  0.02453196 -0.00810112 -0.03132653
> cDat3$id
 [1] "A2"          "A7"          "A8"          "AC"          "AN"         
 [6] "AO"          "AQ"          "AR"          "B6"          "BH"         
[11] "D8"          "E2"          "E9"          "EW"          "GM"         
[16] "A084"        "A109"        "A10J"        "A12P"        "A137"       
[21] "A13Q"        "A144"        "A14D"        "A14M"        "A157"       
[26] "A169"        "A16F"        "A17B"        "A180"        "A18M"       
[31] "A19W"        "A213"        "A21T"        "A22K"        "age"        
[36] "noHM_PC1"    "noHM_PC2"    "noHM_PC3"    "Her2"        "LumA"       
[41] "LumB"        "Normal"      "pcs_ECM_PC1" "pcs_ECM_PC2" "pcs_ECM_PC3"
> 
> write.table(cDat3, file = "cov_EM_with_PCs3_qnorm.txt",
+             append = FALSE, quote = FALSE, sep = "\t",
+             row.names = FALSE, col.names = TRUE)
> 
> # ------------------------------------------------------------------------------
> # Output new covariate data with first 5 PCs.
> # ------------------------------------------------------------------------------
> 
> pt1 = data.frame(id = "pcs_ECM_PC4", t(pcs[, 4]))
> 
> names(pt1) = names(cDat)
> dim(pt1)
[1]   1 406
> 
> cDat4 = rbind(cDat3, pt1)
> 
> dim(cDat4)
[1]  46 406
> cDat4[(nrow(cDat4) - 3):nrow(cDat4), 1:5]
            id        A0SE        A0SF        A0SG         A0SH
43 pcs_ECM_PC1 0.015250597 -0.05542700 -0.01438745  0.040015677
44 pcs_ECM_PC2 0.041867727  0.05970565 -0.02456558 -0.137465093
45 pcs_ECM_PC3 0.009740087  0.02453196 -0.00810112 -0.031326533
46 pcs_ECM_PC4 0.012005478 -0.02963200 -0.02985297  0.008547065
> cDat4$id
 [1] "A2"          "A7"          "A8"          "AC"          "AN"         
 [6] "AO"          "AQ"          "AR"          "B6"          "BH"         
[11] "D8"          "E2"          "E9"          "EW"          "GM"         
[16] "A084"        "A109"        "A10J"        "A12P"        "A137"       
[21] "A13Q"        "A144"        "A14D"        "A14M"        "A157"       
[26] "A169"        "A16F"        "A17B"        "A180"        "A18M"       
[31] "A19W"        "A213"        "A21T"        "A22K"        "age"        
[36] "noHM_PC1"    "noHM_PC2"    "noHM_PC3"    "Her2"        "LumA"       
[41] "LumB"        "Normal"      "pcs_ECM_PC1" "pcs_ECM_PC2" "pcs_ECM_PC3"
[46] "pcs_ECM_PC4"
> 
> write.table(cDat4, file = "cov_EM_with_PCs4_qnorm.txt",
+ append = FALSE, quote = FALSE, sep = "\t",
+ row.names = FALSE, col.names = TRUE)
> 
> 
> # ------------------------------------------------------------------------------
> # Output new covariate data with first 5 PCs.
> # ------------------------------------------------------------------------------
> 
> pt1 = data.frame(id = "pcs_ECM_PC5", t(pcs[, 5]))
> 
> names(pt1) = names(cDat)
> dim(pt1)
[1]   1 406
> 
> cDat5 = rbind(cDat4, pt1)
> 
> dim(cDat5)
[1]  47 406
> cDat5[(nrow(cDat5) - 3):nrow(cDat5), 1:5]
            id        A0SE         A0SF        A0SG         A0SH
44 pcs_ECM_PC2 0.041867727  0.059705655 -0.02456558 -0.137465093
45 pcs_ECM_PC3 0.009740087  0.024531962 -0.00810112 -0.031326533
46 pcs_ECM_PC4 0.012005478 -0.029632002 -0.02985297  0.008547065
47 pcs_ECM_PC5 0.049125850  0.007245894  0.01660167  0.006510562
> cDat5$id
 [1] "A2"          "A7"          "A8"          "AC"          "AN"         
 [6] "AO"          "AQ"          "AR"          "B6"          "BH"         
[11] "D8"          "E2"          "E9"          "EW"          "GM"         
[16] "A084"        "A109"        "A10J"        "A12P"        "A137"       
[21] "A13Q"        "A144"        "A14D"        "A14M"        "A157"       
[26] "A169"        "A16F"        "A17B"        "A180"        "A18M"       
[31] "A19W"        "A213"        "A21T"        "A22K"        "age"        
[36] "noHM_PC1"    "noHM_PC2"    "noHM_PC3"    "Her2"        "LumA"       
[41] "LumB"        "Normal"      "pcs_ECM_PC1" "pcs_ECM_PC2" "pcs_ECM_PC3"
[46] "pcs_ECM_PC4" "pcs_ECM_PC5"
> 
> write.table(cDat5, file = "cov_EM_with_PCs5_qnorm.txt",
+             append = FALSE, quote = FALSE, sep = "\t",
+             row.names = FALSE, col.names = TRUE)
> 
> # ------------------------------------------------------------------------------
> # Output new covariate data with first 6 PCs.
> # ------------------------------------------------------------------------------
> 
> pt1 = data.frame(id = "pcs_ECM_PC6", t(pcs[, 6]))
> 
> names(pt1) = names(cDat)
> dim(pt1)
[1]   1 406
> 
> cDat6 = rbind(cDat5, pt1)
> 
> dim(cDat6)
[1]  48 406
> cDat6[(nrow(cDat6) - 3):nrow(cDat6), 1:5]
            id        A0SE         A0SF        A0SG         A0SH
45 pcs_ECM_PC3 0.009740087  0.024531962 -0.00810112 -0.031326533
46 pcs_ECM_PC4 0.012005478 -0.029632002 -0.02985297  0.008547065
47 pcs_ECM_PC5 0.049125850  0.007245894  0.01660167  0.006510562
48 pcs_ECM_PC6 0.048109884  0.048844365 -0.15668216  0.060994070
> cDat6$id
 [1] "A2"          "A7"          "A8"          "AC"          "AN"         
 [6] "AO"          "AQ"          "AR"          "B6"          "BH"         
[11] "D8"          "E2"          "E9"          "EW"          "GM"         
[16] "A084"        "A109"        "A10J"        "A12P"        "A137"       
[21] "A13Q"        "A144"        "A14D"        "A14M"        "A157"       
[26] "A169"        "A16F"        "A17B"        "A180"        "A18M"       
[31] "A19W"        "A213"        "A21T"        "A22K"        "age"        
[36] "noHM_PC1"    "noHM_PC2"    "noHM_PC3"    "Her2"        "LumA"       
[41] "LumB"        "Normal"      "pcs_ECM_PC1" "pcs_ECM_PC2" "pcs_ECM_PC3"
[46] "pcs_ECM_PC4" "pcs_ECM_PC5" "pcs_ECM_PC6"
> 
> write.table(cDat6, file = "cov_EM_with_PCs6_qnorm.txt",
+ append = FALSE, quote = FALSE, sep = "\t",
+ row.names = FALSE, col.names = TRUE)
> 
> # ------------------------------------------------------------------------------
> # Output new covariate data with first 7 PCs.
> # ------------------------------------------------------------------------------
> 
> pt1 = data.frame(id = "pcs_ECM_PC7", t(pcs[, 7]))
> 
> names(pt1) = names(cDat)
> dim(pt1)
[1]   1 406
> 
> cDat7 = rbind(cDat6, pt1)
> 
> dim(cDat7)
[1]  49 406
> cDat7[(nrow(cDat7) - 3):nrow(cDat7), 1:5]
            id        A0SE         A0SF        A0SG        A0SH
46 pcs_ECM_PC4 0.012005478 -0.029632002 -0.02985297 0.008547065
47 pcs_ECM_PC5 0.049125850  0.007245894  0.01660167 0.006510562
48 pcs_ECM_PC6 0.048109884  0.048844365 -0.15668216 0.060994070
49 pcs_ECM_PC7 0.008509209 -0.022980516  0.02034272 0.132842186
> cDat7$id
 [1] "A2"          "A7"          "A8"          "AC"          "AN"         
 [6] "AO"          "AQ"          "AR"          "B6"          "BH"         
[11] "D8"          "E2"          "E9"          "EW"          "GM"         
[16] "A084"        "A109"        "A10J"        "A12P"        "A137"       
[21] "A13Q"        "A144"        "A14D"        "A14M"        "A157"       
[26] "A169"        "A16F"        "A17B"        "A180"        "A18M"       
[31] "A19W"        "A213"        "A21T"        "A22K"        "age"        
[36] "noHM_PC1"    "noHM_PC2"    "noHM_PC3"    "Her2"        "LumA"       
[41] "LumB"        "Normal"      "pcs_ECM_PC1" "pcs_ECM_PC2" "pcs_ECM_PC3"
[46] "pcs_ECM_PC4" "pcs_ECM_PC5" "pcs_ECM_PC6" "pcs_ECM_PC7"
> 
> write.table(cDat7, file = "cov_EM_with_PCs7_qnorm.txt",
+             append = FALSE, quote = FALSE, sep = "\t",
+             row.names = FALSE, col.names = TRUE)
> 
> q(save="no")
> proc.time()
   user  system elapsed 
282.947   5.719 289.321 
