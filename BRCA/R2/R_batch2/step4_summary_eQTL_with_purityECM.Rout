
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> source("~/research/TCGA/_Sun_MethyE/shared_code/eQTL_Plot.R")
> 
> setwd("~/research/TCGA/_Sun_MethyE/BRCA/_data2")
> 
> inputs = sprintf("expression_vs_methylation_ECM_purity%d.txt", 1:7)
> inputs
[1] "expression_vs_methylation_ECM_purity1.txt"
[2] "expression_vs_methylation_ECM_purity2.txt"
[3] "expression_vs_methylation_ECM_purity3.txt"
[4] "expression_vs_methylation_ECM_purity4.txt"
[5] "expression_vs_methylation_ECM_purity5.txt"
[6] "expression_vs_methylation_ECM_purity6.txt"
[7] "expression_vs_methylation_ECM_purity7.txt"
> 
> outputs = gsub(".txt", ".png", inputs, fixed=TRUE)
> 
> outputs
[1] "expression_vs_methylation_ECM_purity1.png"
[2] "expression_vs_methylation_ECM_purity2.png"
[3] "expression_vs_methylation_ECM_purity3.png"
[4] "expression_vs_methylation_ECM_purity4.png"
[5] "expression_vs_methylation_ECM_purity5.png"
[6] "expression_vs_methylation_ECM_purity6.png"
[7] "expression_vs_methylation_ECM_purity7.png"
> 
> # --------------------------------------------------------------
> # read in location annotation
> # --------------------------------------------------------------
> 
> infoE = read.table("expression_info.txt", sep="\t", header=TRUE,
+ as.is=TRUE)
> dim(infoE)
[1] 15816     8
> infoE[1:2,]
     gene geneSymbol geneID   chr    start      end strand ensembl
1 ?|10357          ?  10357 chr20 56063450 56064083      -    <NA>
2 ?|10431          ?  10431 chr10 51592090 51623336      -    <NA>
> 
> infoM = read.table("methylation_info.txt", sep="\t", header=TRUE,
+ as.is=TRUE)
> dim(infoM)
[1] 394309      4
> infoM[1:2,]
  Composite.Element.REF Gene_Symbol Chromosome Genomic_Coordinate
1            cg13869341      WASH5P          1              15865
2            cg14008030      WASH5P          1              18827
> 
> eChr = gsub("chr", "", infoE$chr)
> mChr = infoM$Chromosome
> 
> table(eChr, useNA="ifany")
eChr
   1   10   11   12   13   14   15   16   17   18   19    2   20   21   22    3 
1651  617  902  839  264  501  500  701  945  228 1135 1030  423  161  395  888 
   4    5    6    7    8    9    X    Y 
 586  742  817  764  534  635  557    1 
> table(mChr, useNA="ifany")
mChr
    1    10    11    12    13    14    15    16    17    18    19     2    20 
38242 19826 23592 19786  9777 12319 12483 18028 23465  5021 21102 28054  8658 
   21    22     3     4     5     6     7     8     9     X     Y  <NA> 
 3539  7037 20107 15950 19619 29143 24109 16547  8047  9760    33    65 
> 
> scuts    = c(1e-60, 1e-70, 1e-80, 1e-100)
> cols     = c("green", "blue", "red", "black")
> eChr     = gsub("chr", "", infoE$chr)
> ePos     = 0.5*(infoE$start + infoE$end)
> mChr     = infoM$Chromosome
> mPos     = infoM$Genomic_Coordinate
> chroms   = 1:22
> 
> # --------------------------------------------------------------
> # iteratively summarizing results
> # --------------------------------------------------------------
> 
> labels = c("PC1", "PC1-2", "PC1-3", "PC1-4", "PC1-5", "PC1-6", "PC1-7")
> 
> pcuts = c(0, 10^(seq(-70, -30, by=10)))
> np    = length(pcuts) - 1
> 
> tbl1 = tbl2 = matrix(nrow=length(inputs), ncol=np)
> 
> for(i in 1:length(inputs)){
+   
+   inputi  = inputs[i]
+   outputi = outputs[i]
+   
+   # ------------------------------------------------------------
+   # read in eQTL results
+   # ------------------------------------------------------------
+   
+   pvs = read.table(inputi, header=TRUE, sep="\t", as.is=TRUE)
+   dim(pvs)
+   pvs[1:2,]
+   
+   summary(pvs$p.value)
+   
+   peChr = eChr[match(pvs$gene, infoE$gene)]
+   pmChr = mChr[match(pvs$SNP,  infoM$Composite.Element.REF)]
+ 
+   for(j in 1:np){
+     
+     ww1 = which(pvs$p.value < pcuts[j+1] & pvs$p.value >= pcuts[j])
+     tbl1[i,j] = length(ww1)
+     tbl2[i,j] = length(which(peChr[ww1] == pmChr[ww1]))/length(ww1)
+   }
+   
+   # ------------------------------------------------------------
+   # plot it
+   # ------------------------------------------------------------
+   
+   table(pvs$gene %in% infoE$gene)
+   table(pvs$SNP  %in% infoM$Composite.Element.REF)
+   
+   geneID   = match(pvs$gene, infoE$gene)
+   markerID = match(pvs$SNP,  infoM$Composite.Element.REF)
+   scores   = pvs$p.value
+   
+   if(i == 1){
+     
+     scuts    = c(1e-60, 1e-70, 1e-80, 1e-100)
+     
+     png("../figures2/expression_vs_methylation_ECM_purity1_stringent.png",
+         width=7.5, height=9, res=200, units="in")
+     
+     eqtl.plot(geneID, markerID, scores, scuts, cols, eChr, ePos, mChr,
+     mPos, chroms, xlab="Methylation Probe Location",
+     ylab="Transcript Location", plot.hotspots=TRUE,
+     hotspots.cut=10, score.type="p-value")
+     
+     dev.off()
+     
+   }
+   
+   scuts    = c(1e-40, 1e-50, 1e-60, 1e-70)
+ 
+   png(sprintf("../figures2/%s", outputi), width=7.5, height=9,
+   res=200, units="in")
+   
+   eqtl.plot(geneID, markerID, scores, scuts, cols, eChr, ePos, mChr,
+             mPos, chroms, xlab="Methylation Probe Location",
+             ylab="Transcript Location", plot.hotspots=TRUE,
+             hotspots.cut=10, score.type="p-value")
+   
+   dev.off()
+   
+   # ------------------------------------------------------------
+   # plot it again, with more liberal cutoff
+   # ------------------------------------------------------------
+   
+   scuts    = c(1e-30, 1e-40, 1e-50, 1e-60)
+   
+   png(sprintf("../figures2/liberal_%s", outputi), width=7.5, height=9,
+       res=200, units="in")
+   
+   eqtl.plot(geneID, markerID, scores, scuts, cols, eChr, ePos, mChr,
+             mPos, chroms, xlab="Methylation Probe Location",
+             ylab="Transcript Location", plot.hotspots=TRUE,
+             hotspots.cut=10, score.type="p-value")
+   
+   dev.off()
+ 
+ }
> 
> pp1s = pcuts[1:(length(pcuts)-1)]
> pp2s = pcuts[2:length(pcuts)]
> 
> rownames(tbl1) = rownames(tbl2) = labels
> colnames(tbl1) = colnames(tbl2) = sprintf("[%.0e, %.0e)", pp1s, pp2s)
> 
> tbl1 = cbind(tbl1, rowSums(tbl1))
> colnames(tbl1)[ncol(tbl1)] = "Total"
> 
> localPercent = rowSums(tbl1[,1:5]*tbl2[,1:5])/tbl1[,6]
> tbl2 = cbind(tbl2, localPercent)
> 
> tbl2 = round(tbl2, 3)
> 
> tbl1
      [0e+00, 1e-70) [1e-70, 1e-60) [1e-60, 1e-50) [1e-50, 1e-40)
PC1              123            264           1193           6511
PC1-2            127            185            668           2979
PC1-3            139            191            773           3628
PC1-4            147            203            815           4123
PC1-5            148            198            475           1332
PC1-6            149            196            466           1368
PC1-7            145            190            456           1156
      [1e-40, 1e-30) Total
PC1            35710 43801
PC1-2          18447 22406
PC1-3          22071 26802
PC1-4          24575 29863
PC1-5           5675  7828
PC1-6           6027  8206
PC1-7           3200  5147
> tbl2
      [0e+00, 1e-70) [1e-70, 1e-60) [1e-60, 1e-50) [1e-50, 1e-40)
PC1                1          0.705          0.395          0.214
PC1-2              1          0.984          0.665          0.390
PC1-3              1          0.953          0.634          0.350
PC1-4              1          0.961          0.605          0.326
PC1-5              1          0.995          0.989          0.862
PC1-6              1          1.000          0.989          0.833
PC1-7              1          1.000          0.996          0.976
      [1e-40, 1e-30) localPercent
PC1            0.122        0.149
PC1-2          0.185        0.238
PC1-3          0.168        0.216
PC1-4          0.163        0.207
PC1-5          0.519        0.627
PC1-6          0.499        0.603
PC1-7          0.878        0.918
> 
> tbl3 = matrix(nrow=7, ncol=6)
> 
> for(i in 1:nrow(tbl3)){
+   for(j in 1:ncol(tbl3)){
+     tbl3[i,j] = sprintf("%d (%.2f)", tbl1[i,j], tbl2[i,j])
+   }
+ }
> 
> rownames(tbl3) = rownames(tbl1)
> colnames(tbl3) = colnames(tbl1)
> write.table(tbl3, sep=" & ", eol = "\\\\\n", quote=FALSE)
[0e+00, 1e-70) & [1e-70, 1e-60) & [1e-60, 1e-50) & [1e-50, 1e-40) & [1e-40, 1e-30) & Total\\
PC1 & 123 (1.00) & 264 (0.70) & 1193 (0.40) & 6511 (0.21) & 35710 (0.12) & 43801 (0.15)\\
PC1-2 & 127 (1.00) & 185 (0.98) & 668 (0.67) & 2979 (0.39) & 18447 (0.18) & 22406 (0.24)\\
PC1-3 & 139 (1.00) & 191 (0.95) & 773 (0.63) & 3628 (0.35) & 22071 (0.17) & 26802 (0.22)\\
PC1-4 & 147 (1.00) & 203 (0.96) & 815 (0.60) & 4123 (0.33) & 24575 (0.16) & 29863 (0.21)\\
PC1-5 & 148 (1.00) & 198 (0.99) & 475 (0.99) & 1332 (0.86) & 5675 (0.52) & 7828 (0.63)\\
PC1-6 & 149 (1.00) & 196 (1.00) & 466 (0.99) & 1368 (0.83) & 6027 (0.50) & 8206 (0.60)\\
PC1-7 & 145 (1.00) & 190 (1.00) & 456 (1.00) & 1156 (0.98) & 3200 (0.88) & 5147 (0.92)\\
> 
> write.table(tbl1, file = "eQTL_with_ECM-purity_hits.txt", append = FALSE,
+ quote = FALSE, sep = "\t", row.names = TRUE,
+ col.names = TRUE)
> 
> write.table(tbl2, file = "eQTL_with_ECM-purity_local_percentage.txt",
+   append = FALSE, quote = FALSE, sep = "\t", row.names = TRUE,
+ col.names = TRUE)
> 
> 
> q(save = "no")
> proc.time()
   user  system elapsed 
 60.186   1.993  65.524 
